<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inovel.mapper.WorkMapper">

    <resultMap id="WorkResultMap" type="com.inovel.entity.Work">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="cover" column="cover"/>
        <result property="category" column="category"/>
        <result property="description" column="description"/>
        <result property="authorId" column="author_id"/>
        <result property="authorName" column="author_name"/>
        <result property="status" column="status"/>
        <result property="wordCount" column="word_count"/>
        <result property="viewCount" column="view_count"/>
        <result property="likeCount" column="like_count"/>
        <result property="collectCount" column="collect_count"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <select id="selectById" resultMap="WorkResultMap">
        SELECT * FROM works WHERE id = #{id}
    </select>

    <select id="selectByAuthorId" resultMap="WorkResultMap">
        SELECT * FROM works WHERE author_id = #{authorId} ORDER BY update_time DESC
    </select>

    <select id="selectAll" resultMap="WorkResultMap">
        SELECT * FROM works ORDER BY update_time DESC
    </select>

    <select id="selectByCategory" resultMap="WorkResultMap">
        SELECT * FROM works WHERE category = #{category} ORDER BY update_time DESC
    </select>

    <select id="search" resultMap="WorkResultMap">
        SELECT * FROM works 
        WHERE title LIKE CONCAT('%', #{keyword}, '%') 
           OR author_name LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY update_time DESC
    </select>

    <insert id="insert" parameterType="com.inovel.entity.Work" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO works (title, cover, category, description, author_id, author_name, 
                          status, word_count, view_count, like_count, collect_count, 
                          create_time, update_time)
        VALUES (#{title}, #{cover}, #{category}, #{description}, #{authorId}, #{authorName},
                #{status}, #{wordCount}, #{viewCount}, #{likeCount}, #{collectCount},
                #{createTime}, #{updateTime})
    </insert>

    <update id="update">
        UPDATE works
        SET title = #{title},
            cover = #{cover},
            category = #{category},
            description = #{description},
            status = #{status},
            update_time = #{updateTime}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM works WHERE id = #{id}
    </delete>

    <update id="updateViewCount">
        UPDATE works SET view_count = view_count + 1 WHERE id = #{id}
    </update>

    <update id="updateLikeCount">
        UPDATE works SET like_count = like_count + 1 WHERE id = #{id}
    </update>

    <update id="updateCollectCount">
        UPDATE works SET collect_count = collect_count + 1 WHERE id = #{id}
    </update>

    <select id="countByAuthorId" resultType="int">
        SELECT COUNT(*) FROM works WHERE author_id = #{authorId}
    </select>

</mapper>
